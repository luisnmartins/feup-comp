module semantictest {

    a = [20];
    a = 2;

    arr = [20];
    arr = [30];                                         // err1 duplicate global

    global = 1;
    global = 2;                                         // err2 duplicate global

    function ret=main(b[]) {

        scal1 = 5;
        scal2 = scal1 + scal1;
        ret = a + b;                                    // err3 scalar = array + array
        ret = a + scal1;                                // err4 scalar = array + scalar
        ret = scal1 + b;                                // err5 scalar = scalar + array
        ret = scal1 * scal1;                            // scalar = scalar * scalar
        ret = -5 / -6;                                  // scalar = const / const
        ret = -5 - scal1;                               // scalar = const - scalar
        ret = scal2 * 60;                               // scalar = scalar * const
        ret = 250 / b;                                  // err6 scalar = const / array
        ret = a & +6;                                   // err7 scalar = array & const

        scal2 = a.size ^ scal1;                         // scalar = size ^ scalar
        scal2 = a.size;                                 // scalar = size

        scal1 = ext.func(a);
        c = [scal1];
        c = scal1;
    }

    function a[]=f() {
        a = [20]; 
        a = 3;
    }

    function scal=scalar(let, bad[]) {
        scal = 2;
    }

    function f() {                                      // err8 duplicate function name
        b = 1;
    }

    function calltest() {

        c(a);                                           // err9 c() not declared
        scalar = c(arr) + not();  //erro aqui logo nao assume que variavel e int                      // err10 err11 err12 c() not declared, not() not declared, return types invalid for operation
        scalar = f();                                   // err13 assign scalar to array return
        a = f(); //possivel array = array
        a = scalar(5, arr);  //nao e erro  a=[100] a= 2                    // err14 assigning scalar return to array
        a = a.size;
        a = ext.func();
        scalar = ext.func2();

        i = 3;
        a[i] = i;
        ai=a[i];

        if(i == 3) {
            b = [20];
        } else {
            b = 2;
        }
        // c = b;
        
        io.println("hello");
        scalar = scalar(5);                             // err15 wrong number of arguments
        scalar = scalar(5, arr);
        scalar = scalar(arr, arr);                      // err16 wrong argument type
        scalar = scalar(scalar, scalar);                // err17 wrong argument type
        scalar = scalar(scalar, arr);
        scalar = scalar(newscal, newarr);               // err18 err19 undeclared locals
        scalar = scalar(newscal, arr);                // err20 undeclared local
    }

    function param(a, a[], bad, let, bad[]) {           // err21 err22 duplicate param names
        io.println("hello");
    }
    
    function scal=moreerrors() {
    
        scal = 2;
        newscal = scal.size + 5;                        // err23 .size on scalar
        arr.size = 5;   //Verificar                                // err24 .size on LHS
        
        myscal = 2;
        myscal = [20];                                  // err25 already a scalar
        global = [myscal];                              // err26 already a (global) scalar
        
        
        newarr = [20];
        newarr = 5 + scalar(global, arr);
        newarr = arr ^ myscal;                          // err27 array on operation
        newarr = myscal & f();                          // err28 array on operation
        
        newarr = arr;
        myscal = arr[myscal] * arr[0];
        
        newarr = [nope.size];                           // err29 undeclared variable
        myscal = notdecl + arr[notdecl2];               // err30 err31 undeclared variables
        myscal = scalar(global, arr) ^ undecl;          // err32 undeclared variable
        notarray[0] = global + myscal;                  // err33 undeclared array access on LHS
        
        arr[undecl] = 5;                                // err34 undeclared index
        
        anotherarr = [N];                               // err35 undeclared variable used as size
    }
    
    function nope=noreturn() {                          // err36 return type not declared in locals / params / globals
    
        myscal = 5;
    }
    
    function nope[]=wrongtype() {                       // err37 return type mismatch
    
        nope = 5;
    }
    
    function a=globalmismatch() {                       // err38 return type mismatch with global array
    
        a[0] = 5;
    }
    
    function scal=seemsgood(scal) {
    
    
    }
}